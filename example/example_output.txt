./ooze functions
add(&Point, &Point) -> Point
clone(&bool) -> bool
clone(&i8) -> i8
clone(&i16) -> i16
clone(&i32) -> i32
clone(&i64) -> i64
clone(&u8) -> u8
clone(&u16) -> u16
clone(&u32) -> u32
clone(&u64) -> u64
clone(&f32) -> f32
clone(&f64) -> f64
clone(&string) -> string
clone(&vector<byte>) -> vector<byte>
clone(&Point) -> Point
clone(&Box) -> Box
create_box(&Point, &Point) -> Box
create_point(&i32, &i32) -> Point
create_u(i32) -> type 0x10494ca9d
deserialize(&vector<byte>) -> bool
deserialize(&vector<byte>) -> i8
deserialize(&vector<byte>) -> i16
deserialize(&vector<byte>) -> i32
deserialize(&vector<byte>) -> i64
deserialize(&vector<byte>) -> u8
deserialize(&vector<byte>) -> u16
deserialize(&vector<byte>) -> u32
deserialize(&vector<byte>) -> u64
deserialize(&vector<byte>) -> f32
deserialize(&vector<byte>) -> f64
deserialize(&vector<byte>) -> string
deserialize(&vector<byte>) -> Point
deserialize(&vector<byte>) -> Box
read(&string) -> vector<byte>
read(&string) -> string
scale(&Point, &i32) -> Point
serialize(&bool) -> vector<byte>
serialize(&i8) -> vector<byte>
serialize(&i16) -> vector<byte>
serialize(&i32) -> vector<byte>
serialize(&i64) -> vector<byte>
serialize(&u8) -> vector<byte>
serialize(&u16) -> vector<byte>
serialize(&u32) -> vector<byte>
serialize(&u64) -> vector<byte>
serialize(&f32) -> vector<byte>
serialize(&f64) -> vector<byte>
serialize(&string) -> vector<byte>
serialize(&Point) -> vector<byte>
serialize(&Box) -> vector<byte>
sleep(&i32) -> i32
take_u(type 0x10494ca9d) -> i32
to_string(&bool) -> string
to_string(&i8) -> string
to_string(&i16) -> string
to_string(&i32) -> string
to_string(&i64) -> string
to_string(&u8) -> string
to_string(&u16) -> string
to_string(&u32) -> string
to_string(&u64) -> string
to_string(&f32) -> string
to_string(&f64) -> string
to_string(&string) -> string
to_string(&Point) -> string
to_string(&Box) -> string
write(&string, &vector<byte>) -> ()
write(&string, &string) -> ()
./ooze types
Box
Point
bool
f32
f64
i16
i32
i64
i8
string
u16
u32
u64
u8
vector<byte>
./ooze run "write('point', serialize(create_point(4, 5)))"
./ooze run -s script.oz "main(deserialize(read('point')), 1)"
((8, 10), (12, 15))
(1, 1)
